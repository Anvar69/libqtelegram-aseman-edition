// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#include "userstatus.h"
#include "core/inboundpkt.h"
#include "core/outboundpkt.h"

using namespace Tg;

Types::UserStatus::UserStatus(UserStatusType classType, InboundPkt *in) :
    m_expires(0),
    m_wasOnline(0),
    m_classType(classType)
{
    if(in) fetch(in);
}

Types::UserStatus::UserStatus(InboundPkt *in) :
    m_expires(0),
    m_wasOnline(0),
    m_classType(typeUserStatusEmpty)
{
    fetch(in);
}

void Types::UserStatus::setExpires(qint32 expires) {
    m_expires = expires;
}

qint32 Types::UserStatus::expires() const {
    return m_expires;
}

void Types::UserStatus::setWasOnline(qint32 wasOnline) {
    m_wasOnline = wasOnline;
}

qint32 Types::UserStatus::wasOnline() const {
    return m_wasOnline;
}

bool UserStatus::operator ==(const UserStatus &b) {
    return m_expires == b.m_expires &&
           m_wasOnline == b.m_wasOnline;
}

void UserStatus::setClassType(UserStatus::UserStatusType classType) {
    m_classType = classType;
}

Types::UserStatus::UserStatusType UserStatus::classType() const {
    return m_classType;
}

bool Types::UserStatus::fetch(InboundPkt *in) {
    LQTG_FETCH_LOG;
    int x = in->fetchInt();
    switch(x) {
    case typeUserStatusEmpty: {
        m_classType = static_cast<UserStatusType>(x);
        return true;
    }
        break;
    
    case typeUserStatusOnline: {
        m_expires = in->fetchInt();
        m_classType = static_cast<UserStatusType>(x);
        return true;
    }
        break;
    
    case typeUserStatusOffline: {
        m_wasOnline = in->fetchInt();
        m_classType = static_cast<UserStatusType>(x);
        return true;
    }
        break;
    
    case typeUserStatusRecently: {
        m_classType = static_cast<UserStatusType>(x);
        return true;
    }
        break;
    
    case typeUserStatusLastWeek: {
        m_classType = static_cast<UserStatusType>(x);
        return true;
    }
        break;
    
    case typeUserStatusLastMonth: {
        m_classType = static_cast<UserStatusType>(x);
        return true;
    }
        break;
    
    default:
        LQTG_FETCH_ASSERT;
        return false;
    }
}

bool Types::UserStatus::push(OutboundPkt *out) const {
    out->appendInt(m_classType);
    switch(m_classType) {
    case typeUserStatusEmpty: {
        return true;
    }
        break;
    
    case typeUserStatusOnline: {
        out->appendInt(m_expires);
        return true;
    }
        break;
    
    case typeUserStatusOffline: {
        out->appendInt(m_wasOnline);
        return true;
    }
        break;
    
    case typeUserStatusRecently: {
        return true;
    }
        break;
    
    case typeUserStatusLastWeek: {
        return true;
    }
        break;
    
    case typeUserStatusLastMonth: {
        return true;
    }
        break;
    
    default:
        return false;
    }
}


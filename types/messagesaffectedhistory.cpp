// This file generated by libqtelegram-code-generator.
// You can download it from: https://github.com/Aseman-Land/libqtelegram-code-generator
// DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN

#include "messagesaffectedhistory.h"

using namespace Tg;
using namespace Types;

Types::MessagesAffectedHistory::MessagesAffectedHistory(MessagesAffectedHistoryType classType, InboundPkt *in) :
    m_offset(0),
    m_pts(0),
    m_ptsCount(0),
    m_classType(classType)
{
    if(in) fetch(in);
}

Types::MessagesAffectedHistory::MessagesAffectedHistory(InboundPkt *in) :
    m_offset(0),
    m_pts(0),
    m_ptsCount(0),
    m_classType(typeMessagesAffectedHistory)
{
    fetch(in);
}

void Types::MessagesAffectedHistory::setOffset(qint32 offset) {
    m_offset = offset;
}

qint32 Types::MessagesAffectedHistory::offset() const {
    return m_offset;
}

void Types::MessagesAffectedHistory::setPts(qint32 pts) {
    m_pts = pts;
}

qint32 Types::MessagesAffectedHistory::pts() const {
    return m_pts;
}

void Types::MessagesAffectedHistory::setPtsCount(qint32 ptsCount) {
    m_ptsCount = ptsCount;
}

qint32 Types::MessagesAffectedHistory::ptsCount() const {
    return m_ptsCount;
}

bool Types::MessagesAffectedHistory::operator ==(const MessagesAffectedHistory &b) {
    return m_offset == b.m_offset &&
           m_pts == b.m_pts &&
           m_ptsCount == b.m_ptsCount;
}

void Types::MessagesAffectedHistory::setClassType(MessagesAffectedHistory::MessagesAffectedHistoryType classType) {
    m_classType = classType;
}

Types::MessagesAffectedHistory::MessagesAffectedHistoryType Types::MessagesAffectedHistory::classType() const {
    return m_classType;
}

bool Types::MessagesAffectedHistory::fetch(InboundPkt *in) {
    LQTG_FETCH_LOG;
    int x = in->fetchInt();
    switch(x) {
    case typeMessagesAffectedHistory: {
        m_pts = in->fetchInt();
        m_ptsCount = in->fetchInt();
        m_offset = in->fetchInt();
        m_classType = static_cast<MessagesAffectedHistoryType>(x);
        return true;
    }
        break;
    
    default:
        LQTG_FETCH_ASSERT;
        return false;
    }
}

bool Types::MessagesAffectedHistory::push(OutboundPkt *out) const {
    out->appendInt(m_classType);
    switch(m_classType) {
    case typeMessagesAffectedHistory: {
        out->appendInt(m_pts);
        out->appendInt(m_ptsCount);
        out->appendInt(m_offset);
        return true;
    }
        break;
    
    default:
        return false;
    }
}

